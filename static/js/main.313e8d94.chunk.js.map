{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","src","poster_path","backdrop_path","alt","name","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","setShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.313e8d94.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\"\n});\n\nexport default instance;","//rfce\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport \"./Row.css\";\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\n\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl]);\n\n\n    const opts = {\n        height: \"390\",\n        width: \"100%\",\n        playerVars: { autoplay: 1 }\n    };\n\n    const handleClick = (movie) => {\n        if (trailerUrl) {\n            setTrailerUrl('');\n        }\n        else {\n            movieTrailer(movie?.name || \"\")\n                .then((url) => {\n                    const urlParams = new URLSearchParams(new URL(url).search);\n                    setTrailerUrl\n                        (urlParams.get(\"v\"));\n                })\n                .catch((error) => console.log(error));\n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n            <div className=\"xscroll\">\n                <div className=\"row__posters\">\n                    {/* container-posters */}\n                    {movies.map(movie => (\n                        <img\n                            key={movie.id}\n                            // src={`${base_url}${movie.poster_path}`}\n                            src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\n                            alt={movie.name}\n                            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                            onClick={() => handleClick(movie)}\n                        />\n                    ))}\n                </div>\n            </div>\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n        </div>\n    );\n}\n\nexport default Row\n","const API_KEY = \"751d8c321dca7703204ced1dfd3b31a1\";\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\nexport default requests;","import React,{useState, useEffect} from 'react'\nimport axios from './axios';\nimport requests from './requests';\nimport './Banner.css';\n\nfunction Banner() {\n\n    const [movie, setMovie] = useState([]);\n\n    useEffect(() => {\n        async function fetchData(){\n            const request = await axios.get(requests.fetchNetflixOriginals);\n            setMovie(request.data.results[\n                Math.floor(Math.random() * request.data.results.length -1)\n            ]);\n            return request;\n        }\n        fetchData();\n    },[])\n\n    console.log(movie);\n\n    function truncate(str,n){\n        return str?.length > n ? str.substr(0,n-1) + \" . . .\": str;\n    }\n\n    return (\n        <header className=\"banner\"\n        style={{\n            backgroundSize: \"cover\",\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n            backgroundPosition :\"center center\"\n        }}>\n            <div className=\"banner__content\">\n                <h1 className=\"banner__title\">{movie?.title || movie?.name || movie?.original_name}</h1>\n\n                <div className=\"banner_buttons\">\n                    <button className=\"banner__button\">Play</button>\n                    <button className=\"banner__button\">My List</button>\n                </div>\n                \n                <h1 className=\"banner__description\">\n                    {truncate(movie?.overview,250)}\n                    </h1>\n            </div>\n            <div className=\"banner--fadeBottom\"/>\n        </header>\n        \n    )\n}\n\nexport default Banner\n","import React, {useState,useEffect} from 'react'\nimport './Nav.css';\n\n\n\nfunction Nav() {\n\n    const [show, setShow] = useState(false);\n\n\n    useEffect(() =>{\n        window.addEventListener(\"scroll\", () => {\n            if(window.scrollY > 100)\n            {\n                setShow(true);\n            }\n            else setShow(false);\n        });\n        return() => {\n            window.removeEventListener(\"scroll\");\n        };\n    },[]);\n    \n\n    return (\n        <div className={`nav ${show && \"nav__black\"}`}>\n            <img \n            className=\"nav__logo\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\n            alt=\"Netflix logo\"/>\n            <img className=\"nav__avatar\"\n            src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\n            alt=\"Avatar\"/>\n            </div>\n    )\n}\n\nexport default Nav\n","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner';\nimport Nav from './Nav';\n\n\nfunction App() {\n  return (\n    \n    <div className=\"App\">\n      \n     <Nav/>\n     \n     <Banner/>\n      <Row \n      isLargeRow\n      title=\"NETFLIX ORIGINALS\" \n      fetchUrl ={requests.fetchNetflixOriginals} />\n      <Row title=\"Trending Now\" fetchUrl ={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n      \n      \n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n  \n  export default reportWebVitals;\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();"],"sourceRoot":""}